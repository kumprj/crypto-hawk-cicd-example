on:
  push:
    branches: [ main ]

name: Deploy to Amazon ECR

jobs:
  build-and-push-and-terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build XTZ Lambda Image
      id: build-image-xtz
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: crypto-hawk-images
        IMAGE_TAG: xtzusdt
      run: |
        # Build a docker container and
        # push it to ECR
        docker build -f DockerfileXTZ -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$GITHUB_SHA .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$GITHUB_SHA
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$GITHUB_SHA"


    - name: Terraform XTZ
      id: xtz-init-plan-apply
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: crypto-hawk-images
        IMAGE_TAG: xtzusdt
        TF_VAR_IMAGE_XTZ: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ github.sha }}
      run: |
        cd terraform/xtz/
        terraform init
        terraform plan
        terraform apply -input=false -auto-approve

